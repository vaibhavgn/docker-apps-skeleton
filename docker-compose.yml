#version: '3.8'

services:
  # app1:
  #   container_name: api-server
  #   build:
  #     context: ./public.api
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     - mongo
  #   networks:
  #     - app-network
  #   environment:
  #     - MONGO_URI=mongodb://root:rootpassword@mongo:27017/app1db

  # app2:
  #   container_name: 3p-retriever
  #   build:
  #     context: ./retriever.svc
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8081:8080"
  #   depends_on:
  #     - mongo
  #   networks:
  #     - app-network
  #   environment:
  #     - MONGO_URI=mongodb://root:rootpassword@mongo:27017/app2db

  growth_service:
    container_name: growth-svc
    build:
      context: ./growthProcessingService
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - mongo
    networks:
      - app-network
    environment:
      - MONGO_URI=mongodb://root:rootpassword@mongo:27017/growthdb?authSource=admin


  api_server:
    container_name: api-server
    build:
      context: ./apiServerService
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    depends_on:
      - mongo
    networks:
      - app-network
    environment:
      - MONGO_URI=mongodb://root:rootpassword@mongo:27017/growthdb?authSource=admin

  scrapper_service:
    container_name: scrapper-svc
    build:
      context: ./scrapperService
      dockerfile: Dockerfile
    environment:
      NEWS_API_KEY: d776d7d8e45348059c7d36a238dbb971
      REDDIT_CLIENT_ID: 208vIov8m5vJutzQZRSggA
      REDDIT_CLIENT_SECRET: TGwF3t-gPNIcwrPz32YFlLX8v3ncyQ
    depends_on:
      - mongo
    networks:
      - app-network

  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    networks:
      - app-network
    volumes:
      - mongo_data:/data/db


networks:
  app-network:
    driver: bridge

volumes:
  mongo_data:
